[{"/Users/chimito/Documents/lambdaprojects/frontend/src/index.js":"1","/Users/chimito/Documents/lambdaprojects/frontend/src/App.js":"2","/Users/chimito/Documents/lambdaprojects/frontend/src/components/ClassCard.js":"3","/Users/chimito/Documents/lambdaprojects/frontend/src/components/ClassesHomePage.js":"4","/Users/chimito/Documents/lambdaprojects/frontend/src/components/SignUp.js":"5","/Users/chimito/Documents/lambdaprojects/frontend/src/components/LogIn.js":"6","/Users/chimito/Documents/lambdaprojects/frontend/src/helpers/axiosWithAuth.js":"7"},{"size":219,"mtime":1621691795686,"results":"8","hashOfConfig":"9"},{"size":814,"mtime":1621691795685,"results":"10","hashOfConfig":"9"},{"size":3310,"mtime":1621691795685,"results":"11","hashOfConfig":"9"},{"size":652,"mtime":1621695044842,"results":"12","hashOfConfig":"9"},{"size":1139,"mtime":1621804358129,"results":"13","hashOfConfig":"9"},{"size":2165,"mtime":1621700031154,"results":"14","hashOfConfig":"9"},{"size":371,"mtime":1621691795686,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"11lfmre",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/chimito/Documents/lambdaprojects/frontend/src/index.js",[],["33","34"],"/Users/chimito/Documents/lambdaprojects/frontend/src/App.js",["35","36"],"import \"./App.css\";\nimport ClassCard from \"./components/ClassCard\";\nimport LogIn from \"./components/LogIn\";\nimport SignUp from \"./components/SignUp\";\nimport ClassesHomePage from \"./components/ClassesHomePage\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n\n        <Route exact path=\"/\">\n          <LogIn component={LogIn} />\n        </Route>\n\n        <Route exact path=\"/signup\">\n          <SignUp component={SignUp} />\n        </Route>\n\n        <Route exact path=\"/card\">\n          <ClassCard component={ClassCard} />\n        </Route>\n\n        <Route exact path=\"/protected\">\n          <ClassesHomePage component={ClassesHomePage} />\n        </Route>\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/chimito/Documents/lambdaprojects/frontend/src/components/ClassCard.js",["37","38"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nconst styles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    maxWidth: 500,\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n  },\n}));\n\nexport default function ClassCard() {\n  const classes = styles();\n  const [selectedDate, setSelectedDate] = React.useState(\n    new Date(\"2014-08-18T21:11:54\")\n  );\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  return (\n    <div className={classes.root}>\n      <form className={classes.paper}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <Grid container spacing={2}>\n            {/* <Grid item>\n            <ButtonBase className={classes.image}>\n              <img\n                className={classes.img}\n                alt=\"complex\"\n                src=\"/static/images/grid/complex.jpg\"\n              />\n            </ButtonBase>\n          </Grid> */}\n            <Grid item xs={12} sm container>\n              <Grid item xs container direction=\"column\" spacing={2}>\n                <Grid item xs>\n                  <TextField\n                    id=\"filled-basic\"\n                    label=\"Class Name\"\n                    variant=\"filled\"\n                  />\n                  <TextField\n                    id=\"filled-basic\"\n                    label=\"Class Type\"\n                    variant=\"filled\"\n                  />\n                  <KeyboardDatePicker\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    id=\"date-picker-inline\"\n                    label=\"Date picker inline\"\n                    value={selectedDate}\n                    onChange={handleDateChange}\n                    KeyboardButtonProps={{\n                      \"aria-label\": \"change date\",\n                    }}\n                  />\n                  <TextField\n                    id=\"filled-basic\"\n                    label=\"Filled\"\n                    variant=\"filled\"\n                  />\n                  <TextField\n                    id=\"filled-basic\"\n                    label=\"Filled\"\n                    variant=\"filled\"\n                  />\n                </Grid>\n                <Grid item>\n                  <Typography variant=\"body2\" style={{ cursor: \"pointer\" }}>\n                    Remove\n                  </Typography>\n                  <Typography variant=\"body2\" style={{ cursor: \"pointer\" }}>\n                    Edit\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"subtitle1\">$19.00</Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </MuiPickersUtilsProvider>\n      </form>\n    </div>\n  );\n}\n","/Users/chimito/Documents/lambdaprojects/frontend/src/components/ClassesHomePage.js",["39","40"],"/Users/chimito/Documents/lambdaprojects/frontend/src/components/SignUp.js",["41","42"],"/Users/chimito/Documents/lambdaprojects/frontend/src/components/LogIn.js",[],"/Users/chimito/Documents/lambdaprojects/frontend/src/helpers/axiosWithAuth.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":6,"column":35,"nodeType":"49","messageId":"50","endLine":6,"endColumn":41},{"ruleId":"47","severity":1,"message":"51","line":6,"column":50,"nodeType":"49","messageId":"50","endLine":6,"endColumn":54},{"ruleId":"47","severity":1,"message":"52","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":25},{"ruleId":"47","severity":1,"message":"53","line":7,"column":3,"nodeType":"49","messageId":"50","endLine":7,"endColumn":21},{"ruleId":"47","severity":1,"message":"54","line":10,"column":12,"nodeType":"49","messageId":"50","endLine":10,"endColumn":21},{"ruleId":"47","severity":1,"message":"55","line":10,"column":23,"nodeType":"49","messageId":"50","endLine":10,"endColumn":35},{"ruleId":"47","severity":1,"message":"56","line":2,"column":10,"nodeType":"49","messageId":"50","endLine":2,"endColumn":20},{"ruleId":"47","severity":1,"message":"57","line":4,"column":8,"nodeType":"49","messageId":"50","endLine":4,"endColumn":27},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useState' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'classList' is assigned a value but never used.","'setClassList' is assigned a value but never used.","'useHistory' is defined but never used.","'createAuthorization' is defined but never used.","no-global-assign","no-unsafe-negation"]